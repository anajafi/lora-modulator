--
-- Written by Synplicity
-- Product Version "M-2017.03L-SP1-1"
-- Program "Synplify Pro", Mapper "maplat, Build 1796R"
-- Fri Apr  5 11:20:58 2019
--

--
-- Written by Synplify Pro version Build 1796R
-- Fri Apr  5 11:20:58 2019
--

--
library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
library synplify;
use synplify.components.all;
library pmi;
use pmi.pmi_components.all;
library ecp5u;
use ecp5u.components.all;

entity my_pll_64mhz is
port(
  CLKI :  in std_logic;
  CLKI2 :  in std_logic;
  SEL :  in std_logic;
  RST :  in std_logic;
  CLKOP :  out std_logic;
  LOCK :  out std_logic);
end my_pll_64mhz;

architecture beh of my_pll_64mhz is
  signal CLKOP_0 : std_logic ;
  signal CLKOS : std_logic ;
  signal CLKOS2 : std_logic ;
  signal CLKOS3 : std_logic ;
  signal INTLOCK : std_logic ;
  signal CLKINTFB : std_logic ;
  signal CLKIT : std_logic ;
  signal REFCLK : std_logic ;
  signal GND : std_logic ;
  signal VCC : std_logic ;
  component PLLREFCS
    port(
      CLK0 :  in std_logic;
      CLK1 :  in std_logic;
      SEL :  in std_logic;
      PLLCSOUT :  out std_logic  );
  end component;
  component EHXPLLL
    port(
      CLKI :  in std_logic;
      CLKFB :  in std_logic;
      PHASESEL1 :  in std_logic;
      PHASESEL0 :  in std_logic;
      PHASEDIR :  in std_logic;
      PHASESTEP :  in std_logic;
      PHASELOADREG :  in std_logic;
      STDBY :  in std_logic;
      PLLWAKESYNC :  in std_logic;
      RST :  in std_logic;
      ENCLKOP :  in std_logic;
      ENCLKOS :  in std_logic;
      ENCLKOS2 :  in std_logic;
      ENCLKOS3 :  in std_logic;
      CLKOP :  out std_logic;
      CLKOS :  out std_logic;
      CLKOS2 :  out std_logic;
      CLKOS3 :  out std_logic;
      LOCK :  out std_logic;
      INTLOCK :  out std_logic;
      REFCLK :  out std_logic;
      CLKINTFB :  out std_logic  );
  end component;
begin
GND_0: VLO port map (
    Z => GND);
VCC_0: VHI port map (
    Z => VCC);
PUR_INST: PUR port map (
    PUR => VCC);
GSR_INST: GSR port map (
    GSR => VCC);
PLLREFCS_0: PLLREFCS port map (
    CLK0 => CLKI,
    CLK1 => CLKI2,
    SEL => SEL,
    PLLCSOUT => CLKIT);
PLLINST_0: EHXPLLL 
  generic map( 
    CLKI_DIV => 1, 
    CLKFB_DIV => 2, 
    CLKOP_DIV => 9, 
    CLKOS_DIV => 1, 
    CLKOS2_DIV => 1, 
    CLKOS3_DIV => 1, 
    CLKOP_ENABLE => "ENABLED", 
    CLKOS_ENABLE => "DISABLED", 
    CLKOS2_ENABLE => "DISABLED", 
    CLKOS3_ENABLE => "DISABLED", 
    CLKOP_CPHASE => 8, 
    CLKOS_CPHASE => 0, 
    CLKOS2_CPHASE => 0, 
    CLKOS3_CPHASE => 0, 
    CLKOP_FPHASE => 0, 
    CLKOS_FPHASE => 0, 
    CLKOS2_FPHASE => 0, 
    CLKOS3_FPHASE => 0, 
    FEEDBK_PATH => "CLKOP", 
    CLKOP_TRIM_POL => "FALLING", 
    CLKOP_TRIM_DELAY => 0, 
    CLKOS_TRIM_POL => "FALLING", 
    CLKOS_TRIM_DELAY => 0, 
    OUTDIVIDER_MUXA => "DIVA", 
    OUTDIVIDER_MUXB => "DIVB", 
    OUTDIVIDER_MUXC => "DIVC", 
    OUTDIVIDER_MUXD => "DIVD", 
    PLL_LOCK_MODE => 0, 
    STDBY_ENABLE => "DISABLED", 
    DPHASE_SOURCE => "DISABLED", 
    PLLRST_ENA => "ENABLED", 
    INTFB_WAKE => "DISABLED"
  ) 
  port map (
    CLKI => CLKIT,
    CLKFB => CLKOP_0,
    PHASESEL1 => GND,
    PHASESEL0 => GND,
    PHASEDIR => GND,
    PHASESTEP => GND,
    PHASELOADREG => GND,
    STDBY => GND,
    PLLWAKESYNC => GND,
    RST => RST,
    ENCLKOP => GND,
    ENCLKOS => GND,
    ENCLKOS2 => GND,
    ENCLKOS3 => GND,
    CLKOP => CLKOP_0,
    CLKOS => CLKOS,
    CLKOS2 => CLKOS2,
    CLKOS3 => CLKOS3,
    LOCK => LOCK,
    INTLOCK => INTLOCK,
    REFCLK => REFCLK,
    CLKINTFB => CLKINTFB);
CLKOP <= CLKOP_0;
end beh;

